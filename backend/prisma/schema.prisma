generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String
  password      String?
  avatar        String?
  googleId      String?       @unique
  provider      String        @default("email")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  chatHistories ChatHistory[]
  courses       Course[]
  quizzes       Quiz[]
  @@map("users")
}

model Course {
  id                 String   @id @default(cuid())
  subject            String
  content            String   @db.Text
  
  // Anciens champs (gardés temporairement)
  detailLevel        Int?
  vulgarizationLevel Int?
  style              String?   // ← Rendre optionnel
  intent             String?   // ← Rendre optionnel
  
  // NOUVEAUX champs
  vulgarization      String?   // ← NOUVEAU
  teacherType        String?   // ← CORRIGÉ: camelCase au lieu de snake_case
  
  duration           String
  createdAt          DateTime @default(now())
  
  userId             String
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  chatHistories      ChatHistory[]
  quizzes           Quiz[]
  @@map("courses")
  @@index([userId, createdAt])
}

model ChatHistory {
  id        String   @id @default(cuid())
  messages  Json
  createdAt DateTime @default(now())
  userId    String
  courseId  String?
  course    Course?  @relation(fields: [courseId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("chat_histories")
}

model Quiz {
  id        String   @id @default(cuid())
  subject   String
  level     String
  type      String   @default("ondemand")
  questions Json
  createdAt DateTime @default(now())
  userId    String
  courseId  String?
  course    Course?  @relation(fields: [courseId], references: [id])
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId, createdAt])
  @@index([userId, type])
  @@map("quizzes")
}