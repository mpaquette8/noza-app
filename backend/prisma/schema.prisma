generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String?  // ← Devient optionnel pour les comptes Google
  avatar    String?  // ← Nouveau : URL de la photo de profil Google
  googleId  String?  @unique // ← Nouveau : ID Google unique
  provider  String   @default("email") // ← Nouveau : "email" ou "google"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  courses      Course[]
  chatHistories ChatHistory[]
  
  @@map("users")
}

model Course {
  id                 String   @id @default(cuid())
  subject            String
  content            String   @db.Text
  /// @deprecated Use style, duration, and intent instead
  detailLevel        Int?
  /// @deprecated Use style, duration, and intent instead
  vulgarizationLevel Int?
  style              String
  duration           String
  intent             String
  createdAt          DateTime @default(now())
  
  userId             String
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  chatHistories      ChatHistory[]
  
  @@map("courses")
}

model ChatHistory {
  id        String   @id @default(cuid())
  messages  Json
  createdAt DateTime @default(now())
  
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  courseId  String?
  course    Course?  @relation(fields: [courseId], references: [id], onDelete: Cascade)
  
  @@map("chat_histories")
}